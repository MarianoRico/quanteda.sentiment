% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/textstat_polarity.R
\name{textstat_polarity}
\alias{textstat_polarity}
\title{Compute sentiment from key polarities}
\usage{
textstat_polarity(x, dictionary, fun = sent_logit, ...)
}
\arguments{
\item{x}{a character, \link[quanteda:corpus]{quanteda::corpus}, \link[quanteda:tokens]{quanteda::tokens}, or \link[quanteda:dfm]{quanteda::dfm} object containing
text, tokens, or features whose sentiment will be scored}

\item{dictionary}{a \link[quanteda:dictionary]{quanteda::dictionary} that has \link{polarity} set, indicating which
keys are associated with positive, negative, and (optionally) neutral
sentiment}

\item{fun}{function; the formula for computing sentiment, which must refer to
\code{pos}, \code{neg}, and (optionally) \code{neut}.  The default is the "logit" scale
(Lowe et al 2011) which is the log of (positive / negative) counts.  See
\link{sentiment-functions} for details and for additional available functions,
as well as details on how to supply custom functions.}

\item{...}{additional arguments passed to \code{fun}}
}
\value{
a \link{data.frame} of sentiment scores
}
\description{
Compute sentiment scores using a polarity approach, based on assigned
categories (types or features) of positive, negative, and neutral sentiment.
Several formulas for combining the polar categories are available, or the
user can supply a custom function.
}
\examples{
library("quanteda")
corp <- tail(data_corpus_inaugural, n = 5)
toks <- tokens(corp)
dfmat <- dfm(toks)
polar1 <- list(pos = "positive", neg = "negative")
polar2 <- list(pos = c("positive", "neg_negative"),
               neg = c("negative", "neg_positive"))

polarity(data_dictionary_LSD2015) <- polar1
textstat_polarity(corp, dictionary = data_dictionary_LSD2015)
textstat_polarity(toks, dictionary = data_dictionary_LSD2015)
textstat_polarity(dfmat, dictionary = data_dictionary_LSD2015)

polarity(data_dictionary_LSD2015) <- polar2
textstat_polarity(corp, dictionary = data_dictionary_LSD2015)
textstat_polarity(toks, dictionary = data_dictionary_LSD2015)
textstat_polarity(corp, dictionary = data_dictionary_LSD2015)
textstat_polarity(dfmat, dictionary = data_dictionary_LSD2015)

# with a user-supplied function
sent_fn <- function(x) (x[, "pos"] - x[, "neg"]) / rowSums(x) * 100
textstat_polarity(toks, data_dictionary_LSD2015, fun = sent_fn)
}
\references{
Lowe, W., Benoit, K. R., Mikhaylov, S., & Laver, M. (2011).
Scaling Policy Preferences from Coded Political Texts. \emph{Legislative Studies
Quarterly}, 36(1), 123â€“155. \doi{10.1111/j.1939-9162.2010.00006.x}
}
